# coding: utf-8

"""
    Core API

    Front is a customer operations platform that enables support, sales, and account management teams to deliver exceptional service at scale. Front streamlines customer communication by combining the efficiency of a help desk and the familiarity of email, with automated workflows and real-time collaboration behind the scenes.  With Front, teams can centralize messages across channels, route them to the right person, and unlock visibility and insights across all of their customer operations. More than 8000 businesses use Front to drive operational efficiency that prevents churn, improves retention, and propels customer growth.

    The version of the OpenAPI document: 1.0.0
    Created by: https://community.front.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from front_core_python_sdk import schemas  # noqa: F401


class AnalyticsMessagesColumns(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        enum_value_to_name = {
            "Message ID": "MESSAGE_ID",
            "Conversation ID": "CONVERSATION_ID",
            "Segment": "SEGMENT",
            "Direction": "DIRECTION",
            "Status": "STATUS",
            "Inbox": "INBOX",
            "Inbox API ID": "INBOX_API_ID",
            "Message date": "MESSAGE_DATE",
            "Autoreply": "AUTOREPLY",
            "Reaction time": "REACTION_TIME",
            "Total reply time": "TOTAL_REPLY_TIME",
            "Handle time": "HANDLE_TIME",
            "Response time": "RESPONSE_TIME",
            "Attributed to": "ATTRIBUTED_TO",
            "Assignee": "ASSIGNEE",
            "Author": "AUTHOR",
            "Contact name": "CONTACT_NAME",
            "Contact handle": "CONTACT_HANDLE",
            "Account names": "ACCOUNT_NAMES",
            "To": "TO",
            "Cc": "CC",
            "Bcc": "BCC",
            "Extract": "EXTRACT",
            "Tags": "TAGS",
            "Tag API IDs": "TAG_API_IDS",
            "Message API ID": "MESSAGE_API_ID",
            "Conversation API ID": "CONVERSATION_API_ID",
            "New Conversation": "NEW_CONVERSATION",
            "First response": "FIRST_RESPONSE",
            "Business hours": "BUSINESS_HOURS",
            "Subject": "SUBJECT",
            "Segment start": "SEGMENT_START",
            "Segment end": "SEGMENT_END",
            "Segment closed": "SEGMENT_CLOSED",
            "Last segment activity": "LAST_SEGMENT_ACTIVITY",
        }
    
    @schemas.classproperty
    def MESSAGE_ID(cls):
        return cls("Message ID")
    
    @schemas.classproperty
    def CONVERSATION_ID(cls):
        return cls("Conversation ID")
    
    @schemas.classproperty
    def SEGMENT(cls):
        return cls("Segment")
    
    @schemas.classproperty
    def DIRECTION(cls):
        return cls("Direction")
    
    @schemas.classproperty
    def STATUS(cls):
        return cls("Status")
    
    @schemas.classproperty
    def INBOX(cls):
        return cls("Inbox")
    
    @schemas.classproperty
    def INBOX_API_ID(cls):
        return cls("Inbox API ID")
    
    @schemas.classproperty
    def MESSAGE_DATE(cls):
        return cls("Message date")
    
    @schemas.classproperty
    def AUTOREPLY(cls):
        return cls("Autoreply")
    
    @schemas.classproperty
    def REACTION_TIME(cls):
        return cls("Reaction time")
    
    @schemas.classproperty
    def TOTAL_REPLY_TIME(cls):
        return cls("Total reply time")
    
    @schemas.classproperty
    def HANDLE_TIME(cls):
        return cls("Handle time")
    
    @schemas.classproperty
    def RESPONSE_TIME(cls):
        return cls("Response time")
    
    @schemas.classproperty
    def ATTRIBUTED_TO(cls):
        return cls("Attributed to")
    
    @schemas.classproperty
    def ASSIGNEE(cls):
        return cls("Assignee")
    
    @schemas.classproperty
    def AUTHOR(cls):
        return cls("Author")
    
    @schemas.classproperty
    def CONTACT_NAME(cls):
        return cls("Contact name")
    
    @schemas.classproperty
    def CONTACT_HANDLE(cls):
        return cls("Contact handle")
    
    @schemas.classproperty
    def ACCOUNT_NAMES(cls):
        return cls("Account names")
    
    @schemas.classproperty
    def TO(cls):
        return cls("To")
    
    @schemas.classproperty
    def CC(cls):
        return cls("Cc")
    
    @schemas.classproperty
    def BCC(cls):
        return cls("Bcc")
    
    @schemas.classproperty
    def EXTRACT(cls):
        return cls("Extract")
    
    @schemas.classproperty
    def TAGS(cls):
        return cls("Tags")
    
    @schemas.classproperty
    def TAG_API_IDS(cls):
        return cls("Tag API IDs")
    
    @schemas.classproperty
    def MESSAGE_API_ID(cls):
        return cls("Message API ID")
    
    @schemas.classproperty
    def CONVERSATION_API_ID(cls):
        return cls("Conversation API ID")
    
    @schemas.classproperty
    def NEW_CONVERSATION(cls):
        return cls("New Conversation")
    
    @schemas.classproperty
    def FIRST_RESPONSE(cls):
        return cls("First response")
    
    @schemas.classproperty
    def BUSINESS_HOURS(cls):
        return cls("Business hours")
    
    @schemas.classproperty
    def SUBJECT(cls):
        return cls("Subject")
    
    @schemas.classproperty
    def SEGMENT_START(cls):
        return cls("Segment start")
    
    @schemas.classproperty
    def SEGMENT_END(cls):
        return cls("Segment end")
    
    @schemas.classproperty
    def SEGMENT_CLOSED(cls):
        return cls("Segment closed")
    
    @schemas.classproperty
    def LAST_SEGMENT_ACTIVITY(cls):
        return cls("Last segment activity")
